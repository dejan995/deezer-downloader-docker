image: jdrouet/docker-with-buildx:stable

services:
    - name: docker:20.10-dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
      alias: docker

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

stages:
  - Test Docker Image
  - Test Base Code
  - Build & Push Docker Image

Testing:
  stage: Test Docker Image
  image: ubuntu:latest
  script:
    - /bin/bash /docker/test-image.sh

  stage: Test Base Code
  image: python:3.8-alpine3.14
  script:
    - apk add ffmpeg alpine-sdk autoconf automake libtool gcc g++ make libffi-dev openssl-dev
    - python3 -m pip install --upgrade pip
    - pip3 install --upgrade setuptools
    - pip3 install virtualenv
    - pip3 install flake8 pytest
    - pip3 install -r requirements.txt
    - pip3 install -U youtube-dl
    - cd app
    - flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - mv settings.ini.example settings.ini
    - sed -i 's/^cookie_arl.*/cookie_arl = $DEEZER_COOKIE_ARL/' settings.ini
    - sed -i "s@^command.*@command = $(which youtube-dl)@" settings.ini
    - youtube-dl --rm-cache-dir
    - pytest -v tests.py

Build & Push Docker Image:
  stage: Build & Push Docker Image
  script:
    - export VERSION=$(date +%y.%m.%d)
    - export IMAGE_NAME=dejan995/deezer-downloader
    - docker login -u "$USER" -p "$PASSWORD"
    - docker buildx create --use
    - >
      docker buildx build --platform linux/amd64,linux/arm64
      -t $IMAGE_NAME:$VERSION
      -t $IMAGE_NAME:latest
      --push
      .

  only:
    - main